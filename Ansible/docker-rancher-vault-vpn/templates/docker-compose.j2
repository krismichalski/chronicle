version: "2"

services:
  nginx:
    image: nginx:stable
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/conf.d"
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "./certs:/etc/nginx/certs:ro"
    networks:
      - proxy-tier

  nginx-gen:
    image: jwilder/docker-gen:0.3.7
    container_name: nginx-gen
    restart: always
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
    volumes_from:
      - nginx
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -only-exposed -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion:latest
    container_name: letsencrypt-nginx-proxy-companion
    restart: always
    volumes_from:
      - nginx
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./certs:/etc/nginx/certs:rw"
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen

  rancher-server:
    image: rancher/server:stable
    container_name: rancher-server
    restart: always
    environment:
      - VIRTUAL_HOST={{ rancher_master_server.subdomain }}.{{ rancher_master_server.domain }}
      - VIRTUAL_NETWORK={{ main_user }}_proxy-tier
      - VIRTUAL_PORT=8080
      - LETSENCRYPT_HOST={{ rancher_master_server.subdomain }}.{{ rancher_master_server.domain }}
      - LETSENCRYPT_EMAIL={{ letsencrypt_email }}
      - CATTLE_API_HOST=https://{{ rancher_master_server.subdomain }}.{{ rancher_master_server.domain }}
    env_file:
      - "./.rancher_env"
    networks:
      - proxy-tier
    extra_hosts:
{% for line in hosts_file.stdout_lines %}
      {{ line }}
{% endfor %}

  docker_auth:
    image: cesanta/docker_auth:stable
    container_name: docker_auth
    restart: always
    volumes:
      - "./auth_server/config:/config:ro"
      - "./auth_server/ssl:/ssl"
      - "/var/log/docker_auth:/logs"
    command: /config/auth_config.yml
    environment:
      - VIRTUAL_HOST={{ auth_server.subdomain }}.{{ auth_server.domain }}
      - VIRTUAL_NETWORK={{ main_user }}_proxy-tier
      - VIRTUAL_PORT=5001
      - VIRTUAL_PROTO=https
      - LETSENCRYPT_HOST={{ auth_server.subdomain }}.{{ auth_server.domain }}
      - LETSENCRYPT_EMAIL={{ letsencrypt_email }}
    networks:
      - proxy-tier

  hub:
    image: registry:2
    container_name: hub
    restart: always
    environment:
      - VIRTUAL_HOST={{ registry_server.subdomain }}.{{ registry_server.domain }}
      - VIRTUAL_NETWORK={{ main_user }}_proxy-tier
      - VIRTUAL_PORT=5000
      - LETSENCRYPT_HOST={{ registry_server.subdomain }}.{{ registry_server.domain }}
      - LETSENCRYPT_EMAIL={{ letsencrypt_email }}
      - NGINX_MAX_BODY_SIZE_IN_MB=2000
    env_file:
      - "./.registry_env"
    volumes:
      - "./auth_server/ssl:/ssl"
    networks:
      - proxy-tier

  vault:
    image: cgswong/vault:0.6.0
    container_name: vault
    restart: always
    environment:
      - VIRTUAL_HOST={{ vault_server.subdomain }}.{{ vault_server.domain }}
      - VIRTUAL_NETWORK={{ main_user }}_proxy-tier
      - VIRTUAL_PORT=8200
      - LETSENCRYPT_HOST={{ vault_server.subdomain }}.{{ vault_server.domain }}
      - LETSENCRYPT_EMAIL={{ letsencrypt_email }}
      - VAULT_ADDR=https://{{ vault_server.subdomain }}.{{ vault_server.domain }}
    volumes:
      - "./vault.conf:/root/vault.conf"
    cap_add:
      - IPC_LOCK
    command: server -config /root/vault.conf
    networks:
      - proxy-tier
    extra_hosts:
{% for line in hosts_file.stdout_lines %}
      {{ line }}
{% endfor %}

networks:
  proxy-tier:
    driver: bridge
